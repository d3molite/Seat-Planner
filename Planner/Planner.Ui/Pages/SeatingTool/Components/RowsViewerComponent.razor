@using Planner.Data.Models
@using Planner.Data.Interfaces
@using Planner.Data.Enums

<MudStack Class="h-100 w-100" AlignItems="AlignItems.Center" Style="overflow-y: scroll;" Spacing="0">
                            
    @* Add an entire Seating Row Here *@
    @foreach (var row in Rows)
    {
        <MudStack Class="w-100" Style="margin: 4rem 0;" AlignItems="AlignItems.Center">
            <MudPaper Style="@TopCarpetStyle(row)">
                <MudStack AlignItems="AlignItems.Center" Justify="Justify.Center" Class="h-100">
                    <MudText Color="Color.Default">Relaxzone</MudText>
                </MudStack>
            </MudPaper>
            <MudStack Class="w-100 flex-wrap" Row="true" Spacing="2" Reverse="true" Justify="Justify.Center">
                @for (var i = 1; i <= row.Seats.Count() - 1; i += 2)
                {
                    var secondSeat = row.Seats[i - 1];
                    var firstSeat = row.Seats[i];

                    @* One Table *@
                    <SeatingTable FirstSeat="@firstSeat" SecondSeat="@secondSeat" Row="@row" Attendees="@Attendees"/>
                }
            </MudStack>
            <MudPaper Style="@BottomCarpetStyle(row)">
                <MudStack AlignItems="AlignItems.Center" Justify="Justify.Center" Class="h-100">
                    <MudText Color="Color.Default">Relaxzone</MudText>
                </MudStack>
            </MudPaper>
        </MudStack>
    }
</MudStack>

@code {

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        SeatingConfigurationService.SeatingDataUpdated += async(_, _) => await InvokeAsync(StateHasChanged);
    }

    private string TopCarpetStyle(SeatingRow row)
    {
        return row.CarpetPosition is CarpetPosition.Both or CarpetPosition.North ? CarpetDefault : "display: none";
    }

    private string BottomCarpetStyle(SeatingRow row)
    {
        return row.CarpetPosition is CarpetPosition.Both or CarpetPosition.South ? CarpetDefault : "display: none";
    }

    private string CarpetDefault => "background: #33DD1144; height: 45px !important; width: 99%";

    private List<SeatingRow> Rows => SeatingConfigurationService.Rows;

    private List<Attendee> Attendees => SeatingConfigurationService.Attendees;
    
    [Parameter]
    public ISeatingConfigurationService SeatingConfigurationService { get; set; }
    
}