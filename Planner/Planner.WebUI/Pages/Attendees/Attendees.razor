@page "/Attendees"
@using Planner.Db.Models
@using Planner.Db.Interfaces
@using Planner.Db.Utils
@inject IAttendeeRepository AttendeeRepository
@inject ISnackbar Snackbar

<MudStack Class="h-100" Style="overflow: hidden" Spacing="3">
    <MudPaper Class="pa-4">
        <MudStack Row="true" Justify="Justify.SpaceBetween">
            <MudText>Event Configs</MudText>
            <MudIconButton Icon="@Icons.Material.Filled.Add" Variant="Variant.Outlined" Color="Color.Success" @onclick="Add"/>
        </MudStack>
    </MudPaper>
    <MudPaper Class="flex-grow-1" Style="overflow-x: scroll">
        <MudDataGrid Items="@AttendeeItems" T="Attendee" EditMode="DataGridEditMode.Cell" ReadOnly="false">
            <Columns>
                <PropertyColumn Property="x => x.FirstName" Title="First Name"/>
                <PropertyColumn Property="x => x.LastName" Title="Last Name"/>
                <PropertyColumn Property="x => x.NickName" Title="Nick"/>
                <PropertyColumn Property="x => x.MailAddress" Title="e-Mail"/>
                <PropertyColumn Property="x => x.NumberOfSeats" Title="Number of Seats"/>
            </Columns>
        </MudDataGrid>
    </MudPaper>
    <MudPaper Class="pa-4">
        <MudStack Row="true" Justify="Justify.FlexEnd">
            <MudButton Color="Color.Success" Variant="Variant.Filled" @onclick="Save">Save</MudButton>
        </MudStack>
    </MudPaper>
</MudStack>

@code {
    protected override void OnInitialized()
    {
        AttendeeItems = AttendeeRepository.GetAll().ToList();
        
        foreach (var attendee in AttendeeItems)
        {
            attendee.Operation = Operation.Updated;
        }
        
        base.OnInitialized();
        InvokeAsync(StateHasChanged);
    }

    private List<Attendee> AttendeeItems { get; set; }

    private void Add()
    {
        AttendeeItems.Add(new Attendee()
        {
            Operation = Operation.Created, 
            SeatIdentifier = string.Empty
        });
    }
    
    private void Save()
    {
        var result = false;
        foreach (var attendee in AttendeeItems)
        {
            result = AttendeeRepository.Crud(attendee);
        }

        if (result) Snackbar.Add("Saved Successfully", Severity.Success);
        else Snackbar.Add("Error while Saving", Severity.Error);
    }

}